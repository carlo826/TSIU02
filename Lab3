;
; Lab3.asm
;
; Created: 12/6/2017 10:23:33 AM
; Author : Carl
;

.equ TIME = $60
.def Zero = r17

.def Index = r18
.def BCDTmp = r19
.def BCDAddr = r20

.def MUXIndex = r21
.def MUXDigit = r22
.def MUXAddr = r23

.org $0000
jmp COLD

.org INT0addr
jmp INTERRUPT_0

.org INT1addr
jmp INTERRUPT_1

	; --- Cold start
COLD:
	; --- Initiera stack pekare
	ldi r16, low(RAMEND)	
	out spl, r16
	ldi r16, high(RAMEND)
	out sph, r16

	; --- Konfigurerar "trigger settings" för INT0 och INT1 till fallande flank.
	ldi r16, (1 << ISC01) | (0 << ISC00) | (1 << ISC11) | (0 << ISC10)
	out MCUCR, r16
	
	; --- Aktiverar INT0 och INT1
	ldi r16, (1 << INT0) | (1 << INT1) 
	out GICR, r16 

	sei						; Aktiverar global interrupt

	ldi r16, $03				; Ladda de port som ska vara output i port a
	out DDRA, r16			; Sätt den alla  portar i port a till output
	ldi r16, $FF			; Ladda de port som ska vara output i port a
	out DDRB, r16			; Sätt den alla  portar i port a till output

	; --- Nollställer
	clr Zero
	clr MUXIndex

WAIT:
	jmp WAIT
	; --- Interrupts
INTERRUPT_0:
	push r16
	in r16, SREG
	push r16
	call BCD
	pop r16
	out SREG, r16
	pop r16
	reti

INTERRUPT_1:
	push r16
	in r16, SREG
	push r16
	call MUX
	pop r16
	out SREG, r16
	pop r16
	reti


	; --- BCD
BCD:
	ldi YH, low(TIME)
	ldi YL, high(TIME)
	clr Index
BCD_INNER:
	add YL, Index
	adc YH, Zero
	sbrc Index, 0			; Skippa om index är jämnt
	call BCD_ODD
	sbrs Index, 0			; Skippa om index är udda
	call BCD_EVEN
	inc Index
	cpi Index, 4
	brne BCD_INNER
	ret

BCD_ODD:
	ld BCDTmp, Y
	inc BCDTmp
	cpi BCDTmp, 6
	brsh OVERFLOW
	ret
BCD_EVEN:
	ld BCDTmp, Y
	inc BCDTmp
	cpi BCDTmp, 10
	brsh OVERFLOW
	ret

OVERFLOW:
	st Y, Zero
	cpi Index, 3
	brne OVERFLOW_INNER
	ret
OVERFLOW_INNER:
	add YL, Index
	adc YH, Zero
	ld BCDTmp, Y
	inc BCDTmp
	st Y, BCDTmp
	subi YL, 1
	ret

	; --- MUX
MUX:
	cpi MUXIndex, 4
	breq MUX_RESET
	brne MUX_INNER
MUX_INNER:
	lds MUXAddr, TIME
	add MUXAddr, MUXIndex
	out PORTA, MUXIndex
	ldi ZH, high(BIT_PATTERN*2)
	ldi ZL, low(BIT_PATTERN*2)
	add ZL, MUXIndex
	adc ZH, Zero
	lpm MUXDigit, Z
	out PORTB, MUXDigit
	inc MUXIndex
	ret
MUX_RESET:
	clr MUXIndex
	ret

BIT_PATTERN:
	.db $3F, $6, $5B, $5E, $66, $6D, $7D, $27, $7F, $67